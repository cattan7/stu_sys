server.port=1114
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://cattan:777777@localhost:1112/eureka/
spring.application.name=zuul-proxy

zuul.routes.user.path=/userService/**
zuul.routes.stuinfo.path=/client/stuinfoService/**
zuul.routes.teacherInfo.path=/client/teacherService/**
zuul.routes.course.path=/client/courseService/**

# ribbon.NIWSServerListClassName=com.netflix.loadbalancer.ConfigurationBasedServerList

ribbon.ReadTimeout = 200

ribbon.ActiveConnectionsLimit=1

zuul.threadPool.useSeparateThreadPools=true

zuul.AuthorizedRequestFilter.pre.disable=false 
zuul.sensitive-headers=Cookie,Set-Cookie

# https://www.oschina.net/question/3290293_2302048
# Zuul配置时有一个敏感Header的设置，默认情况下会过滤Cookie、Set-Cookie和Authorization这3个。通过Zuul调用微服务时就会Authorization给过滤掉，所以微服务将收不到token，从而抛出未认证异常错误。只需要在Zuul服务器中重设一下敏感Header就可以了：
spring.security.user.name=cattan
spring.security.user.password=777777
security.oauth2.sso.home.secure=true
security.oauth2.sso.home.path=/client/
security.oauth2.client.access-token-uri=http://localhost:1114/userService/oauth/token
security.oauth2.client.user-authorization-uri=http://localhost:1114/userService/oauth/authorize
security.oauth2.client.client-id=admin
security.oauth2.client.client-secret=admin123456
security.oauth2.resource.user-info-uri=http://localhost:1114/userService/users
security.oauth2.resource.prefer-token-info=false